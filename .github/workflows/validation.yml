---
name: Validation

on:
  pull_request:
    branches: [master, development]
  push:
    branches: [master, development]
jobs:
  validate:
    name: Validation
    runs-on: ubuntu-latest
    permissions:
      contents: read
      statuses: write
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Poetry dependencies
        run: poetry install --no-interaction --with dev,test

      - name: Install uv
        run: pip install uv

      - name: Run quality checks
        run: |
          poetry run uvx ruff check .
          poetry run uvx ruff format --check .

      - name: Run tests
        run: poetry run python -m pytest -v --tb=short
